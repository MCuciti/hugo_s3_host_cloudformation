AWSTemplateFormatVersion: '2010-09-09'
Description: 'Static website infrastructure with S3, CloudFront, SSL, and Route53.'

Parameters:
  CustomDomain:
    Description: 'The custom domain for the static website.'
    Type: String

  HostedZoneId:
    Description: 'The hosted zone ID of the custom domain.'
    Type: String

  SourceGithubRepository:
    Description: 'The name of the github organization/repo name which will access the created role'
    Type: String

Resources:
  SSLCertificate:
    Type: 'AWS::CertificateManager::Certificate'
    Properties:
      DomainName: !Ref CustomDomain
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Ref CustomDomain
          HostedZoneId: !Ref HostedZoneId

  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'OAI for accessing the S3 static website bucket'

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${CustomDomain}-static'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - 'GET'
              - 'PUT'
            AllowedOrigins:
              - '*'
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action: 's3:GetObject'
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${S3Bucket}/*'
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  IndexFileCloudFrontFunction:
    Type: AWS::CloudFront::Function
    Properties: 
      Name: IndexFileCloudFrontFunction
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          
          // Check whether the URI is missing a file name.
          if (uri.endsWith('/')) {
              request.uri += 'index.html';
          } 
          // Check whether the URI is missing a file extension.
          else if (!uri.includes('.')) {
              request.uri += '/index.html';
          }
          return request;
        }   
      FunctionConfig: 
        Comment: 'This is for the index.html file auto handling thing'
        Runtime: cloudfront-js-1.0

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Aliases:
        - !Ref CustomDomain
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # default value of CachingOptimized
          # OriginRequestPolicyId: 88a60bf0-f2fd-4edb-8c8f-869a9c56d7a5
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt IndexFileCloudFrontFunction.FunctionMetadata.FunctionARN
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        ViewerCertificate:
          AcmCertificateArn: !Ref SSLCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        PriceClass: PriceClass_100

  Route53RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref CustomDomain
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # This is a hard coded value for all cloud front distributions
        DNSName: !GetAtt CloudFrontDistribution.DomainName

  GitHubOIDCProvider:
    Type: 'AWS::IAM::OIDCProvider'
    Properties:
      Url: 'https://token.actions.githubusercontent.com'
      ClientIdList:
        - 'sts.amazonaws.com'
      ThumbprintList:
        - '6938fd4d98bab03faadb97b34396831e3780aea1'

  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': 'sts.amazonaws.com'
                "token.actions.githubusercontent.com:sub": !Sub "repo:${SourceGithubRepository}:ref:refs/heads/octo-branch"
      Path: '/'
      Policies:
        - PolicyName: !Sub '${CustomDomain}-management-role'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 's3:*'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${S3Bucket}'
                  - !Sub 'arn:aws:s3:::${S3Bucket}/*'
              - Action:
                  - 'cloudfront:*'
                Effect: Allow
                Resource: !Sub 'arn:aws:cloudfront::*:distribution/${CloudFrontDistribution}'

  CloudFrontDistributionIdParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub '/${CustomDomain}/cloudfront_distribution_id'
      Type: String
      Value: !Ref CloudFrontDistribution

  SourceBucketIdParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: !Sub '/${CustomDomain}/s3_bucket'
      Type: String
      Value: !Ref S3Bucket

  